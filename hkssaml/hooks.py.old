from django.conf import settings
from mailmanclient import Client
from mailman.interfaces.usermanager import IUserManager
from zope.component import getUtility
from mailman.utilities.datetime import now

# BEGIN Sept 20 2024 edits
#def create_user(user_identity):
#    client = Client('http://localhost:8001/3.1', 'restadmin', 'restpass')
#    
#    #verify email
#    user_email = user_identity[settings.SAML2_AUTH.get('ATTRIBUTES_MAP', {}).get('email', 'Email')][0]
#    user = client.create_user(user_email, None)
#    user.add_address(user_email, absorb_existing=True)
#    address = client.get_address(user_email)
#    address.verify()
#    user.preferred_address = user_email
# END Sept 20 2024 edits

def create_user(user_identity):
    client = Client('http://localhost:8001/3.1', 'restadmin', 'restpass')

    # Debugging: Log the user_identity contents
    import logging
    logger = logging.getLogger(__name__)
    logger.info(f"User identity received: {user_identity}")

    # Verify email attribute is present
    email_attr_key = settings.SAML2_AUTH.get('ATTRIBUTES_MAP', {}).get('email', 'Email')

    if email_attr_key not in user_identity:
        logger.error(f"Email attribute '{email_attr_key}' not found in user_identity")
        raise ValueError(f"Email attribute '{email_attr_key}' not found")

    user_email = user_identity[email_attr_key][0]

    # Continue with user creation
    user = client.create_user(user_email, None)
    user.add_address(user_email, absorb_existing=True)
    address = client.get_address(user_email)
    address.verify()
    user.preferred_address = user_email

    #user_manager = getUtility(IUserManager)
    #user_email = user_identity[settings.SAML2_AUTH.get('ATTRIBUTES_MAP', {}).get('email', 'Email')][0]
    #user_name = user_identity[settings.SAML2_AUTH.get('ATTRIBUTES_MAP', {}).get('username', 'UserName')][0]
    #user = user_manager.make_user(user_email)
    #address = user_manager.get_address(user_email)
    #address.verified_on = now()
    #user.preferred_address = address

def before_login(user_identity):
    client = Client('http://localhost:8001/3.1', 'restadmin', 'restpass')
    
    #verify email
    #user_email = user_identity[settings.SAML2_AUTH.get('ATTRIBUTES_MAP', {}).get('email', 'Email')][0]
    #address = client.get_address(user_email)
    #address.verify()
    #print(user_email)
    #print(address.verified)
    #file = open("/srv/hks-mailman-plugins/hkssaml/log.txt", "w")
    #file.write(user_email)
    #file.write(str(address.verified))
    #file.close()


